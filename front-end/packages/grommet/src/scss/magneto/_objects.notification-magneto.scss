.#{$grommet-namespace}notification {
  padding: 0;
  @include inuit-font-size($control-font-size, $inuit-base-spacing-unit);

  .#{$grommet-namespace}button {
    min-width: 0;
    padding: 0;
  }

  @each $status, $color in $brand-status-colors {
    &--status-#{$status} {
      $border-color: map-get($notification-border, $status);

      // background-color comes from background-color-index
      border: 1px solid $border-color;
      @include border-bottom-radius($border-radius);
      @include border-top-radius($border-radius);

      .#{$grommet-namespace}notification__message {
        color: map-get($notification-color, $status);
        font-size: $base-font-size;
      }

      .#{$grommet-namespace}notification__status {
        margin: 0;
        .#{$grommet-namespace}status-icon__base {
          fill: none;
          stroke: $border-color;
          path, circle {
            @if $status == warning {
              fill: none;
            }
            else {
              fill: $border-color;
            }
            stroke: $border-color;
            stroke-width: 1px;
          }
        }

        .#{$grommet-namespace}status-icon__detail {
          fill: none;
          stroke: $border-color;
          path, circle {
            fill: $border-color;
            stroke: $border-color;
            stroke-width: 1px;
          }
        }

        &.#{$grommet-namespace}status-icon-unknown {
          .#{$grommet-namespace}status-icon__detail {
            stroke: $active-colored-text-color;
            fill: $active-colored-text-color;
          }
        }
      }

      .#{$grommet-namespace}button__icon {
        padding: quarter($inuit-base-spacing-unit);
        line-height: 1;
        .#{$grommet-namespace}control-icon.#{$grommet-namespace}control-icon-close {
          @include icon-color($border-color);
          @include size(15px);
        }

        &:active,
        &:hover {
          .#{$grommet-namespace}control-icon.#{$grommet-namespace}control-icon-close {
            @include icon-color($border-color);
          }
        }
      }

      .#{$grommet-namespace}notification__close {
        stroke: $active-colored-text-color;
        fill: $active-colored-text-color;
      }
    }
  }
}

.#{$grommet-namespace}notification__message {
  @include inuit-font-size($content-large-font-size, $inuit-base-spacing-unit);
  line-height: 1.3em;

  + * {
    margin-top: $inuit-base-spacing-unit;
  }
}

.#{$grommet-namespace}notification__status {
  flex: 0 0 auto;
  margin-right: $inuit-base-spacing-unit;

  html.rtl & {
    margin-right: 0;
    margin-left: $inuit-base-spacing-unit;
  }
}

.#{$grommet-namespace}notification--small {
  .#{$grommet-namespace}notification {
    &__message {
      @include inuit-font-size($control-font-size, $inuit-base-spacing-unit);
    }
  }
}